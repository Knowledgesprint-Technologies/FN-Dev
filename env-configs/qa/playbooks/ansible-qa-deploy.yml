---
- name: Pull docs from github, convert to html files
  hosts: localhost
  vars:
  -  dest: "/home/ansibleadm/FN-Dev/"
  tasks:
#    - name: Recursively remove directory
#      file:
#       path: "{{ dest }}"
#       state: absent

   - name: Pull from github
     git:
      repo: 'https://github.com/Knowledgesprint-Technologies/FN-Dev.git'
      dest: "{{ dest }}"
      version: qa
      force: yes

   - name: Convert docx to html files
     shell: bash /home/ansibleadm/FN-Dev/env-configs/qa/scripts/for-html.sh

- name: Git Checkout - QA Branch
  hosts: docker-vm
  tasks:
   - name: Recursively remove directory
     file:
      path: /home/dockeradm/FN-Dev/
      state: absent
   - name: Pull from github
     git:
      repo: 'https://github.com/Knowledgesprint-Technologies/FN-Dev.git'
      dest: /home/dockeradm/FN-Dev
      version: qa
      force: yes

  #  - name: Build image and push it to pvt repo
  #    docker_image:
  #     build:
  #      path: /home/dockeradm/FN-Dev/env-configs/qa/dockerfiles/Dockerfile
  #     name: projectfndev/fn-qa-docker-images
  #     push: yes
  #     source: build
  
- name: Copy html files to docker-vm
  hosts: localhost
  tasks:
    - name: deploy to docker using rsync (push)
      command:
         rsync -avh --delete /home/ansibleadm/FN-Dev/tmp/ dockeradm@15.206.146.56:~/FN-Dev/env-configs/qa/dockerfiles/html-gen-files/

- name: Build an image, push it to a private repo and create container
  hosts: docker-vm
  tasks:
   - name: Build Image and push it to pvt repo
     shell: 
       chdir: /home/dockeradm/FN-Dev/env-configs/qa/dockerfiles/
       executable: /bin/bash
       cmd: "source tag2.sh && docker push projectfndev/fn-qa-docker-images:$newtag && docker stack deploy -c docker-compose.yml fn-qa-apache"
       
#    - name: Fetch latest image tag
#      shell:
#        chdir: /home/dockeradm
#        executable: /bin/bash
#        cmd: echo $newtag > sample.txt
#      register: image_tag
     
#    - name: Push the image to Dockerhub. 
#      command: "docker push projectfndev/fn-qa-docker-images:$newtag"
       
# - name: Deploy Docker Stack with 3 replicas
#   hosts: docker-vm
#   tasks:
#    - name: Deploy the docker stack.
#      shell:
#        chdir: /home/dockeradm/FN-Dev/env-configs/qa/dockerfiles/
#        cmd: docker stack deploy -c docker-compose.yml fn-qa-apache
